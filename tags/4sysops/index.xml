<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>4sysops on Lets Automate It</title>
    <link>https://letsautomate.it/tags/4sysops/</link>
    <description>Recent content in 4sysops on Lets Automate It</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 06 Sep 2018 19:06:51 -0400</lastBuildDate>
    
	<atom:link href="https://letsautomate.it/tags/4sysops/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A Powershell Implementation of Netstat.exe</title>
      <link>https://letsautomate.it/article/a-powershell-implementation-of-netstat/</link>
      <pubDate>Thu, 06 Sep 2018 19:06:51 -0400</pubDate>
      
      <guid>https://letsautomate.it/article/a-powershell-implementation-of-netstat/</guid>
      <description>My PowerShell module PSNetStat contains the Get-NetStat function that offers features similar to the popular netstat.exe command. You can use it to analyze and display network connections in PowerShell.
During the lead-up to IronScripter at the 2018 DevOps + PowerShell Global Summit, there were several weekly competitions to prepare for the official competition. One such challenge was during Week 4 where the challenge asked the competitor to generate a PowerShell equivalent to the output of netstat.</description>
    </item>
    
  </channel>
</rss>